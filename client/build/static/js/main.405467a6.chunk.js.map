{"version":3,"sources":["helpers/Auth.js","service/actions/userAction.js","service/actions/ActionTypes.js","containers/Login.js","service/actions/errorAction.js","components/Header.js","components/Auth.js","components/Grid/Segment.js","components/Map/Marker.js","containers/Dashboard.js","containers/NoPage.js","containers/Home.js","App.js","service/reducers/userReducer.js","service/reducers/errorReducer.js","service/reducers/index.js","service/configStore.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","concat","setUser","userData","type","payload","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","submitForm","bind","assertThisInitialized","handleInput","newProps","errorMessage","err","alert","removeError","keys","auth","length","history","push","e","name","target","id","val","value","setState","defineProperty","preventDefault","loginUser","react_default","a","createElement","Form","onSubmit","className","FormGroup","controlId","FormControl","placeholder","onChange","Button","Component","connect","user","authUser","errors","dispatch","post","then","res","data","localStorage","setItem","dUser","jwtDecode","catch","response","Header","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","inline","variant","components_Auth","InComponent","role","arguments","undefined","Auth","_React$Component","apply","inherits","createClass","key","React","Segment","handleClick","selectSegment","segment","symbol","priceCurrency","price","style","backgroundImage","imageUrl","onClick","Marker","segmentClasses","selected","text","Dashboard","selectedSegment","handleSearch","event","search","segments","allSegments","filter","RegExp","exec","_this2","fetch","json","_this3","center","lat","lng","map","components_Grid_Segment","google_map_react_lib_default","zoom","components_Map_Marker","NoPage","Container","Row","Col","md","Home","components_Header","react_router","exact","path","component","App","react_router_dom","firstState","users","message","reducers","combineReducers","action","objectSpread","toConsumableArray","el","_id","error","middleware","thunk","configStore","createStore","rootReducer","applyMiddleware","jwtToken","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.405467a6.chunk.js","sourcesContent":["import axios from 'axios';\n\nfunction setAuthToken(token){\n    if (token) {\n      axios.defaults.headers.common['token'] = `${token}`\n    }else{\n      delete axios.defaults.headers.common['token']\n    }\n  }\n    \nexport {setAuthToken};","import {\n    ADD_USER,\n    GET_USERS,\n    DELETE_USER,\n    LOGIN_USER,\n    LOGOUT_USER,\n    ERRORS\n  } from './ActionTypes';\n  \nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nimport {setAuthToken} from '../../helpers/Auth';\n\n// add user\nexport const addUser = userData => dispatch => {\n  axios.post('/user/register', userData)\n    .then(res =>\n      dispatch({\n        type: ADD_USER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// get all users\nexport const getUsers = () => dispatch => {\n  axios.get('/user/')\n    .then(res =>\n      dispatch({\n        type: GET_USERS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: ERRORS,\n        payload: null\n      })\n    );\n};\n\n// set user in state\nexport const setUser = userData => {\n    return {\n      type: LOGIN_USER,\n      payload: userData\n    }\n  }  \n\n// delete user\nexport const deleteUser = userId => dispatch => {\n  axios.delete(`/user/${userId}`)\n    .then(res =>\n      dispatch({\n        type: DELETE_USER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: ERRORS,\n        payload: null\n      })\n    );\n};\n\n// login\nexport const loginUser = userData => dispatch => {\n    axios.post('user/login', userData)\n      .then(res =>{\n        let token = res.data.token\n        localStorage.setItem('jwtToken', token)\n        setAuthToken(token)\n        let dUser = jwtDecode(token)\n        dispatch(setUser(dUser))\n      })\n      .catch(err => \n        dispatch({\n          type:ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n  \n// logout\nexport const logoutUser = () => dispatch => {\n  setAuthToken(false)\n  localStorage.removeItem('jwtToken');\n  dispatch({\n    type: LOGOUT_USER\n  })\n};","export const ADD_USER = 'ADD_USER';\nexport const GET_USERS = 'GET_USERS';\nexport const DELETE_USER = 'DELETE_USER';\n\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const ERRORS = 'ERRORS';\nexport const REMOVE_ERRORS = 'REMOVE_ERRORS';","import React, { Component } from 'react';\n\nimport {\n    Form,\n    FormGroup,\n    FormControl,\n    Button,\n} from 'react-bootstrap';\nimport '../styles/Login.css';\n\nimport { connect } from 'react-redux';\nimport { loginUser } from '../service/actions/userAction';\nimport { removeError } from '../service/actions/errorAction';\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        };\n\n        this.submitForm = this.submitForm.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    componentWillReceiveProps(newProps){\n        if(newProps.errorMessage.err){\n            alert(newProps.errorMessage.err)\n            this.props.removeError()\n        }\n        if(Object.keys(newProps.auth).length > 0){\n            this.props.history.push('/')\n        }\n    }\n\n    handleInput(e){\n        let name = e.target.id\n        let val = e.target.value\n        this.setState({[name]: val})\n    }\n\n    submitForm(e){\n        e.preventDefault();\n        this.props.loginUser(this.state)\n    }\n\n    render(){\n        return (\n            <Form\n                onSubmit={this.submitForm}\n                className=\"form-signin\"\n            >\n                <h2>Hi there!</h2>\n                <FormGroup controlId=\"formHorizontalEmail\">\n                    <FormControl\n                        type=\"text\"\n                        value={this.state.value}\n                        placeholder=\"Enter email\"\n                        onChange={this.handleInput}\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"formHorizontalPassword\">\n                    <FormControl\n                        type=\"text\"\n                        value={this.state.value}\n                        placeholder=\"Enter password\"\n                        onChange={this.handleInput}\n                    />\n                </FormGroup>\n                <FormGroup className=\"center-button\">\n                    <Button type=\"submit\">Login</Button>\n                </FormGroup>\n            </Form>\n        )\n    }\n}\n\nconst reduxProps = state => {\n    return ({\n        auth: state.user.authUser,\n        errorMessage: state.errors\n    })\n};\n\nexport default connect(reduxProps, { loginUser, removeError })(Login);","import { REMOVE_ERRORS } from './ActionTypes';\n\nexport const removeError = () => dispatch => {\n    dispatch({\n        type: REMOVE_ERRORS\n    })\n};","import React, { Component } from 'react';\nimport { \n    Navbar,\n    Nav, \n    NavDropdown, \n    Form, \n    FormControl,\n    Button\n} from 'react-bootstrap';\n\nimport { connect } from 'react-redux';\n//import './Header.css';\n\nclass Header extends Component {\n    render(){\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Title</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#link\">Link</Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Item #1</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Item #2</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Item #3</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Item #4</NavDropdown.Item>\n                    </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nconst reduxProps = state => {\n    return ({\n        auth: state.user.authUser\n    })\n}\n\nexport default connect(reduxProps)(Header);","import React from 'react';\nimport { connect } from 'react-redux';\n\n/**\n * Auth React Class - Example seen from https://goo.gl/oKVi33\n * @class Auth\n */\nexport default function(InComponent,role = null){\n  class Auth extends React.Component {\n\n    componentWillMount(){\n      let auth = this.props.auth\n\n\n      /*Check if user is student or admin - admin is 1 - student is 0*/\n      if (Object.keys(auth).length === 0) {\n        alert('You must be logged In to see this Page')\n        this.props.history.push('/login')\n        return\n      }\n\n      if (role) {\n        if (auth.role !== 1) {\n          alert('You must be an administrator to see this page')\n          this.props.history.push('/')\n        }\n      }\n    }\n\n    render() {\n      return (<InComponent {...this.props}/>)\n    }\n  }\n\n  const reduxProps = state => {\n    return ({\n      auth: state.user.authUser\n    })\n  };\n\n  return connect(reduxProps)(Auth);\n}","import React, { Component } from \"react\";\nimport \"./Segment.css\";\n\nclass Segment extends Component {\n\thandleClick = () => {\n\t\tthis.props.selectSegment(this.props.segment);\n\t}\n\trender() {\n\n\t\tlet symbol = this.props.segment.priceCurrency\n\n\t\tif(this.props.segment.priceCurrency === 'EUR') {\n\t\t\tsymbol = '€'\n\t\t}\n\t\t\n\t\tconst title = `${this.props.segment.name}`\n\n\t\tconst price = `${this.props.segment.price}${symbol} /month`\n\n\t\tconst style = {\n\t\t\tbackgroundImage: `url('${this.props.segment.imageUrl}')`\n\t\t};\n\t\treturn(\n\t\t\t<div className=\"Segment\" onClick={this.handleClick}>\n\t\t\t\t<div className=\"Segment-picture\" style={style}></div>\n\t\t\t\t<div className=\"Segment-title\">\n\t\t\t\t\t{title}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Segment-price\">\n\t\t\t\t\t{price} \n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t);\n\t}\n}\nexport default Segment;","import React, { Component } from \"react\";\nimport \"./Marker.css\";\n\nclass Marker extends Component {\n\trender() {\n\t\tlet segmentClasses = \"Marker\";\n\t\tif(this.props.selected) {\n\t\t\tsegmentClasses += \" Selected\";\n\t\t}\n\t\treturn (\n\t\t\t<div className={segmentClasses}>\n\t\t\t\t{this.props.text}€\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default Marker;","import React, { Component } from 'react';\n\n//import components\nimport Segment from '../components/Grid/Segment';\nimport Marker from '../components/Map/Marker';\n\n// import Google Map\nimport GoogleMapReact from 'google-map-react';\n\n// import CSS\nimport '../styles/Dashboard.css';\n\n\nclass Dashboard extends Component {\n  //this is a class conscructor that assigns the initial this.state\n  constructor(props) {\n    super(props);\n    this.state = {\n      segments: [],\n      allSegments: [],\n      selectedSegment: null,\n      search: \"\"\n    }\n  }\n  // The componentDidMount() methods runs \n  // after the component output has been rendered to the DOM.\n  componentDidMount(){\n    const url = \"http://localhost:3001/config/host.json\"; //the URL where JSON file is located\n    fetch(url)\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({\n          segments: data,\n          allSegments: data\n        });\n      })\n  }\n\n  selectSegment = (segment) => {\n    this.setState({\n      selectedSegment: segment\n    })\n  }\n\n  //debugger\n  handleSearch = (event) => {\n    this.setState({\n      search: event.target.value,\n      segments: this.state.allSegments.filter((segment) =>\n        new RegExp(event.target.value, \"i\").exec(segment.name))\n    });\n  }\n  render() {\n    // The center position is Vienna, Austria\n    let center = {\n      lat: 48.210033,\n      lng: 16.363449 \n     }\n    \n    if (this.state.selectedSegment){\n      center = {\n        lat: this.state.selectedSegment.lat,\n        lng: this.state.selectedSegment.lng\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"Main\">\n            <div className=\"Search\">\n              <input \n                type=\"text\"\n                placeholder=\"Type something...\"\n                value={this.state.search}\n                onChange={this.handleSearch}/>\n            </div>\n            <div className=\"Segments\">\n              {this.state.segments.map((segment)=>{\n                return <Segment \n                  key={segment.id} \n                  segment={segment}\n                  selectSegment={this.selectSegment}/>\n              })}\n            </div>\n        </div> \n\n        <div className=\"Map\">\n          <GoogleMapReact\n            center={center}\n            zoom={12}>\n\n            {this.state.segments.map((segment)=>{\n                return  <Marker \n                            key={segment.id}\n                            lat={segment.lat} \n                            lng={segment.lng}\n                            text={segment.price}\n                            selected={segment === this.state.selectedSegment}/>\n              })}\n              \n          </GoogleMapReact>\n        </div>        \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport { \n    Container,\n    Row, \n    Col \n} from 'react-bootstrap';\n\nclass NoPage extends Component {\n    render (){\n        return(\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <h1>Sorry...Something Wrong...</h1>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default NoPage;","import React, {Component} from 'react';\n\nimport { \n    Route,\n    Switch    \n} from 'react-router-dom';\n\nimport Header from '../components/Header';\nimport Auth from '../components/Auth';\n\nimport Dashboard from '../containers/Dashboard';\nimport Login from '../containers/Login';\nimport NoPage from '../containers/NoPage';\n\nclass Home extends Component {\n    render(){\n        return (\n            <div>\n                <Header/>\n                <Switch>\n                    <Route exact path='/' component={Auth(Dashboard)}/>\n                    <Route path='/login' key=\"login\" component={Login}/>\n                    <Route component={Auth(NoPage)}/>\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './styles/App.css';\n\nimport Login from './containers/Login';\nimport Home from './containers/Home';\n\nimport { \n    BrowserRouter,\n    Route,\n    Switch    \n} from 'react-router-dom';\n\nclass App extends Component {\n    render(){\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Switch>\n                    <Route path=\"/login\" component={Login}/>\n                        <Route path=\"/\" component={Home}/>\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n\nexport default App;","import {\n    ADD_USER,\n    GET_USERS,\n    DELETE_USER,\n    LOGIN_USER,\n    LOGOUT_USER\n  } from '../actions/ActionTypes';\n  \n  const firstState = {\n    users: [],\n    user: {},\n    authUser: {}\n  }\n  \n  export default function(state = firstState, action) {\n    switch (action.type) {\n      \n      case ADD_USER:\n        return {\n          ...state,\n          users: [action.payload, ...state.users],\n          user: action.payload\n        };\n      case GET_USERS:\n        return {\n          ...state,\n          users: action.payload\n        };\n      case DELETE_USER:\n        return {\n          ...state,\n          users: state.users.filter(el => {\n            return el._id !== action.payload._id\n          })\n        };\n      case LOGIN_USER:\n        return {\n          ...state,\n          authUser: action.payload\n        };\n      case LOGOUT_USER:\n        return {\n          ...state,\n          authUser: {}\n        };\n      default:\n        return state;\n    }\n  }","import {\n    ERRORS,\n    REMOVE_ERRORS\n} from '../actions/ActionTypes';\n\nconst firstState = {\n    message: {}\n}\n\nexport default function(state = firstState, action){\n    switch(action.type){\n        case ERRORS:\n            return {\n                message: action.payload\n            };\n        case REMOVE_ERRORS:\n            return {\n                message: {}\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport userReducer from './userReducer';\nimport errorReducer from './errorReducer';\n\nconst reducers = combineReducers({\n    user: userReducer,\n    error: errorReducer\n});\n\nexport default reducers","import { \n    createStore, \n    applyMiddleware \n} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst configStore = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middleware)\n);\n\nexport default configStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport jwtDecode from 'jwt-decode';\nimport configStore from './service/configStore';\nimport { setAuthToken }  from './helpers/Auth';\nimport { setUser } from './service/actions/userAction';\n\nif (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken)\n    configStore.dispatch(setUser(jwtDecode(localStorage.jwtToken)))\n}\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={configStore}>\n            <App />\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}